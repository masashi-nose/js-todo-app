(()=>{"use strict";class e extends class{constructor(){this._listners=new Map}addEventListner(e,t){this._listners.has(e)||this._listners.set(e,new Set),this._listners.get(e).add(t)}emit(e){const t=this._listners.get(e);t&&t.forEach((e=>{e.call(this)}))}removeEventListner(e,t){const o=this._listners.get(e);o&&o.forEach((e=>{e===t&&o.delete(t)}))}}{constructor(e=[]){super(),this.items=e}getTotalCount(){return this.items.length}getTodoItems(){return this.items}onChange(e){this.addEventListner("change",e)}offChange(e){this.removeEventListner("change",e)}emitChange(){this.emit("change")}addTodo(e){this.items.push(e),this.emitChange()}updateTodo({id:e,completed:t}){const o=this.items.find((t=>t.id===e));o&&(o.completed=t,this.emitChange())}deleteTodo({id:e}){confirm("このTodoアイテムを削除します。")&&(this.items=this.items.filter((t=>t.id!==e)),this.emitChange())}}let t=0;class o{constructor({title:e,completed:o}){this.id=t++,this.title=e,this.completed=o}}function n(e,...t){return function(e){const t=document.createElement("template");return t.innerHTML=e,t.content.firstElementChild}(e.reduce(((e,o,n)=>{const s=t[n-1];return"string"==typeof s?e+function(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}(s)+o:e+String(s)+o})))}class s{createElement(e,{onUpdateTodo:t,onDeleteTodo:o}){const s=e.completed?n`<li><input type="checkbox" class="checkbox" checked><s>${e.title}</s><button class="delete">×</button></li>`:n`<li><input type="checkbox" class="checkbox">${e.title}<button class="delete">×</button></li>`;return s.querySelector(".checkbox").addEventListener("change",(()=>{t({id:e.id,completed:!e.completed})})),s.querySelector(".delete").addEventListener("click",(()=>{o({id:e.id})})),s}}class i{createElement(e,{onUpdateTodo:t,onDeleteTodo:o}){const i=n`<ul />`;return e.forEach((e=>{const n=(new s).createElement(e,{onDeleteTodo:o,onUpdateTodo:t});i.appendChild(n)})),i}}const l=document.querySelector("#js-form");console.log(l);const d=document.querySelector("#js-form-input");console.log(d);const c=document.querySelector("#js-todo-count");console.log(c);const h=document.querySelector("#js-todo-list");console.log(h);const a=new class{constructor({formElement:t,formInputElement:o,todoListContainerElement:n,todoCountElement:s}){console.log("container created"),this.todoListModel=new e([]),this.todoListView=new i,this.formElement=t,console.log(this.formElement),this.formInputElement=o,console.log(this.formInputElement),this.todoListContainerElement=n,console.log(n),this.todoCountElement=s,console.log(this.todoCountElement),this.handleSubmit=this.handleSubmit.bind(this),this.handleChange=this.handleChange.bind(this)}handleAdd(e){this.todoListModel.addTodo(new o({title:e,completed:!1}))}handleUpdate({id:e,completed:t}){this.todoListModel.updateTodo({id:e,completed:t})}handleDelete({id:e}){this.todoListModel.deleteTodo({id:e})}handleSubmit(e){e.preventDefault();const t=this.formInputElement;""!==t.value&&(this.handleAdd(t.value),t.value="")}handleChange(){console.log("handle change called");const e=this.todoCountElement;console.log(e);const t=this.todoListContainerElement;console.log(t);const o=this.todoListModel.getTodoItems();console.log(o);var n,s;n=this.todoListView.createElement(o,{onUpdateTodo:({id:e,completed:t})=>{this.handleUpdate({id:e,completed:t})},onDeleteTodo:({id:e})=>{this.handleDelete({id:e})}}),(s=t).innerHTML="",s.appendChild(n),e.textContent="Todoアイテム数："+this.todoListModel.getTotalCount()}mount(){this.todoListModel.onChange(this.handleChange),this.formElement.addEventListener("submit",this.handleSubmit)}unmount(){this.todoListModel.offChange(this.handleChange),this.formElement.removeEventListener("submit",this.handleSubmit)}}({formElement:l,formInputElement:d,todoListContainerElement:h,todoCountElement:c});window.addEventListener("load",(()=>{a.mount()})),window.addEventListener("unload",(()=>{a.unmount()}))})();